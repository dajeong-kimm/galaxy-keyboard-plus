version: "3.8"

services:
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports: ["80:80","443:443"]
    volumes:
      - /home/ubuntu/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on: [gateway]
    restart: always

  gateway:
    container_name: gateway-service
    build: ./back/gateway
    command: ["java","-jar","/app/app.jar","--spring.profiles.active=prod"]
    env_file: .env.prod
    depends_on: [postgres]

  auth:
    container_name: auth-service
    build: ./back/auth
    command: ["java","-jar","/app/app.jar","--spring.profiles.active=prod"]
    env_file: .env.prod
    depends_on: [postgres]

  scheduler:
    container_name: backend-service
    build: ./back/scheduler
    command: ["java","-jar","/app/app.jar","--spring.profiles.active=prod"]
    env_file: .env.prod
    depends_on: [postgres]

  rag:
    container_name: rag-service
    build: ./back/rag
    command: ["uvicorn","app.main:app","--host","0.0.0.0","--port","8090"]
    env_file: .env.prod

  postgres:
    container_name: postgres
    image: postgres:15
    env_file: .env.prod
    volumes: [pgdata:/var/lib/postgresql/data]

volumes:
  pgdata:
